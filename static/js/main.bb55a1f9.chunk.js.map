{"version":3,"sources":["actions/index.js","styles/ButtonStyle.js","components/Link.js","containers/FilterLink.js","components/Footer.js","styles/AppTodoStyle.js","styles/InputStyle.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","styles/AppStyle.js","components/App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","index.js"],"names":["nextTodoId","VisibilityFilters","Button","styled","button","Link","active","children","onClick","disabled","style","marginLeft","connect","state","ownProps","filter","visibilityFilter","dispatch","type","Footer","FilterLink","Form","form","Input","input","onSubmit","e","text","preventDefault","value","trim","id","ref","node","Todo","completed","textDecoration","TodoList","todos","toggleTodo","map","todo","key","getVisibleTodos","t","Error","Div","div","App","VisibleTodoList","action","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","__PRELOADED_STATE__","applyMiddleware","reduxThunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb55a1f9.chunk.js","sourcesContent":["let nextTodoId = 0;\nexport const addTodo = text => ({\n  type: 'ADD_TODO',\n  id: nextTodoId++,\n  text,\n});\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter,\n});\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id,\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE',\n};\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  font-size: 16px;\n  margin: 5px;\n  padding: 10px;\n  background-color: palevioletred;\n  border: none;\n  color: white;\n  border-radius: 3px;\n`;\n\nexport { Button };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../styles/ButtonStyle';\n\nconst Link = ({ active, children, onClick }) => (\n  <Button\n    onClick={onClick}\n    disabled={active}\n    style={{\n      marginLeft: '4px',\n    }}\n  >\n    {children}\n  </Button>\n);\n\nLink.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Link;\n","import { connect } from 'react-redux';\nimport { setVisibilityFilter } from '../actions';\nimport Link from '../components/Link';\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Link);\n","import React from 'react';\nimport FilterLink from '../containers/FilterLink';\nimport { VisibilityFilters } from '../actions';\n\nconst Footer = () => (\n  <div>\n    <span>Show: </span>\n    <FilterLink filter={VisibilityFilters.SHOW_ALL}>All</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>Active</FilterLink>\n    <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>Completed</FilterLink>\n  </div>\n);\n\nexport default Footer;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: grid;\n  grid-template-columns: 90% 10%;\n  margin: 0 auto;\n  max-width: 800px;\n`;\n\nexport { Form };\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  font-size: 20px;\n  margin: 5px;\n  padding: 10px;\n  border-radius: 3px;\n`;\n\nexport { Input };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addTodo } from '../actions';\nimport { Form } from '../styles/AppTodoStyle';\nimport { Button } from '../styles/ButtonStyle';\nimport { Input } from '../styles/InputStyle';\n\nconst AddTodo = ({ dispatch }) => {\n  let input;\n\n  return (\n    <div>\n      <Form\n        onSubmit={e => {\n          e.preventDefault();\n          if (!input.value.trim()) {\n            return;\n          }\n          dispatch(addTodo(input.value));\n          input.value = '';\n        }}\n      >\n        <Input ref={node => (input = node)} />\n        <Button type=\"submit\">Add</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default connect()(AddTodo);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ onClick, completed, text }) => (\n  <li\n    onClick={onClick}\n    style={{\n      textDecoration: completed ? 'line-through' : 'none',\n    }}\n  >\n    {text}\n  </li>\n);\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, toggleTodo }) => (\n  <ul>\n    {todos.map(todo => (\n      <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import { connect } from 'react-redux';\nimport { toggleTodo } from '../actions';\nimport TodoList from '../components/TodoList';\nimport { VisibilityFilters } from '../actions';\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed);\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n};\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","import styled from 'styled-components';\n\nconst Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  max-width: 800px;\n`;\n\nexport { Div };\n","import React from 'react';\nimport Footer from './Footer';\nimport AddTodo from '../containers/AddTodo';\nimport VisibleTodoList from '../containers/VisibleTodoList';\nimport { Div } from '../styles/AppStyle';\n\nconst App = () => (\n  <Div>\n    <AddTodo />\n    <VisibleTodoList />\n    <Footer />\n  </Div>\n);\n\nexport default App;\n","const todos = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false,\n        },\n      ];\n    case 'TOGGLE_TODO':\n      return state.map(todo =>\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n      );\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { VisibilityFilters } from '../actions';\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default visibilityFilter;\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport visibilityFilter from './visibilityFilter';\n\nexport default combineReducers({\n  todos,\n  visibilityFilter,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport rootReducer from './reducers';\nimport reduxThunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  { ...window.__PRELOADED_STATE__ },\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}